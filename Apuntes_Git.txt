1. git log + nombre del archivo con ext = Conocer los códigos de los commit realizados 
2. git diff + código del commit 1 + espacio + código de commit 2 = Comparar dos commit 
3. git reset + código del commit (al que quiero volver) + --hard 
4. git log --stat = Permite ver los cambios al detalle de cada commit

git reset --soft: Borra el historial y los registros de Git de commits anteriores, pero guarda los cambios en Staging para aplicar las últimas actualizaciones a un nuevo commit.
git reset --hard: Deshace todo, absolutamente todo. Toda la información de los commits y del área de staging se elimina del historial.
git reset --mixed: Borra todo, exactamente todo. Toda la información de los commits y del área de staging se elimina del historial.
git reset HEAD: El comando git reset saca archivos del área de staging sin borrarlos ni realizar otras acciones. Esto impide que los últimos cambios en estos archivos se envíen al último commit. Podemos incluirlos de nuevo en staging con git add si cambiamos de opinión.

git branch HEAD: Crea otra rama con el nombre que pongamos donde dice HEAD

git log --all --graph --decorate --oneline: Ver toda la historia y proceso de los commit al detalle
Alias de ese comando tan largo
alias arbolito="git log --all --graph --decorate --oneline": con esto le creamos el alias a ese comando

